'ssf-begin
'       ;

'module
'   name;SsfBlockWorkbook
'{{{
Option Explicit

Const MyKey = "workbook"

Public Sub ReadFrom(Block As Variant, ByVal Env As GlobalResources)
    Dim KeyValue As Variant
    Dim Key As String
    Dim Value As String
    
    Env.LogWrite MyKey
    
    On Error Resume Next
    
    For Each KeyValue In Block
        Select Case SsfUtils.ExtractKeyValue(KeyValue, Key, Value)
        Case "name"
            SwitchBook Value, Env
        End Select
        If Err.Number <> 0 Then
            Env.LogWrite MyKey & ": " & Err.Number & " " & Err.Description & "(" & Key & "," & Value & ")"
            Err.Clear
        End If
    Next
End Sub

Public Sub CellsNameReadFrom(Block As Variant, ByVal Env As GlobalResources)
    Const LocalKey = "cells-name"
    
    Dim KeyValue As Variant
    Dim Key As String
    Dim Value As String
    Dim Counter As Long
    Dim ThePreviousValue As String
    Dim CellsName As Names
    
    Counter = 0
    Set CellsName = Env.Current("workbook").Names
    
    Env.LogWrite LocalKey
    
    On Error Resume Next
    
    For Each KeyValue In Block
        Select Case SsfUtils.ExtractKeyValue(KeyValue, Key, Value)
        Case ""
            Counter = Counter + 1
            If Counter Mod 2 = 1 Then
                ThePreviousValue = Value
            Else
                CellsName.Add Name:=Value, RefersToR1C1:=ThePreviousValue
            End If
        End Select
        If Err.Number <> 0 Then
            Env.LogWrite LocalKey & ": " & Err.Number & " " & Err.Description & "(" & Key & "," & Value & ")"
            Err.Clear
        End If
    Next
End Sub

Public Sub WriteTo(ByVal Target As Object, ByVal Stream As Object, ByVal Env As GlobalResources)
    Dim Names As String
    
    Env.LogWrite MyKey
    Stream.WriteLine SsfWriter.SsfBlockBegin(MyKey)
    
    Names = Target.Name
    If SsfBlockModules.CanTouchVBProject Then
        Names = Names & "/" & Target.VBProject.Name
    End If
    Env.LogWrite Names
    Stream.WriteLine SsfWriter.MakeSsfLine("name", Names)
    
    Stream.WriteLine SsfWriter.SsfBlockEnd
    
    ChildrenWriteTo Target, Stream, Env
End Sub

Public Sub CellsNameWriteTo(ByVal Target As Object, ByVal Stream As Object, ByVal Env As GlobalResources)
    Const LocalKey = "cells-name"
    
    Dim CellNames As Names
    Dim CellName As Name
    
    Set CellNames = Target.Names
    If CellNames.Count = 0 Then Exit Sub
    
    ' simple list, 2 lines for a single (address, name) pair
    Env.LogWrite LocalKey
    Stream.WriteLine SsfWriter.SsfBlockBegin(LocalKey)
    
    For Each CellName In CellNames
        Stream.WriteLine SsfWriter.MakeSsfLine("", CellName.RefersToR1C1)
        Stream.WriteLine SsfWriter.MakeSsfLine("", CellName.Name)
    Next
    
    Stream.WriteLine SsfWriter.SsfBlockEnd
End Sub

Private Sub ChildrenWriteTo(Target As Object, Stream As Object, Env As GlobalResources)
    Dim Ws As Worksheet
    
    SsfBlockModules.ProjectRequiresWriteTo Target.VBProject, Stream, Env
    For Each Ws In Target.Worksheets
        SsfBlockWorksheet.WriteTo Ws, Stream, Env
    Next
    CellsNameWriteTo Target, Stream, Env
    ' put this at the last: http://code.google.com/p/cowares-excel-hello/wiki/hello_thisworkbook#Case_2
    SsfBlockModules.WriteTo Target.VBProject, Stream, Env
End Sub

Private Sub SwitchBook(Names As String, Env As GlobalResources)
    ' currently, we just open a new book
    ' not name it, nor search an existing book
    Dim Book As Workbook
    Dim BookName As String
    Dim ProjectName As String
    
    Set Book = Application.Workbooks.Add
    Set Env.Current("workbook") = Book
    Env.LogWrite "new workbook " & Names
    
    SsfUtils.DivideName Names, BookName, ProjectName, "VBAProject"
    If (ProjectName <> "") And (ProjectName <> "VBAProject") And SsfBlockModules.CanTouchVBProject() Then
        Book.VBProject.Name = ProjectName
        Env.LogWrite "vbproject " & ProjectName
    End If
End Sub

'}}}

'ssf-end

