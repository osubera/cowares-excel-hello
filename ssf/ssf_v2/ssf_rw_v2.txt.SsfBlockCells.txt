'ssf-begin
';

'module
'   name;SsfBlockCells
'{{{
Option Explicit

Public Sub CellsFormulaReadFrom(Block As Variant, ByVal Env As GlobalResources)
    Const LocalKey = "cells-formula"
    Const LocalProperty = "FormulaR1C1"
    
    CellsParseSsfBlocks Block, Env, LocalKey, LocalProperty
End Sub

Public Sub CellsNumberFormatReadFrom(Block As Variant, ByVal Env As GlobalResources)
    Const LocalKey = "cells-numberformat"
    Const LocalProperty = "NumberFormat"
    
    CellsParseSsfBlocks Block, Env, LocalKey, LocalProperty
End Sub

Public Sub WriteTo(ByVal Target As Object, ByVal Stream As Object, ByVal Env As GlobalResources)
    CellsFormulaWriteTo Target, Stream, Env
    CellsNumberFormatWriteTo Target, Stream, Env
End Sub

Public Sub CellsFormulaWriteTo(ByVal Target As Object, ByVal Stream As Object, ByVal Env As GlobalResources)
    Const LocalKey = "cells-formula"
    Const LocalProperty = "FormulaR1C1"
    Const EmptyValue = Empty
    
    CellsMakeSsfBlocks Target, Stream, Env, LocalKey, LocalProperty, EmptyValue
End Sub

Public Sub CellsNumberFormatWriteTo(ByVal Target As Object, ByVal Stream As Object, ByVal Env As GlobalResources)
    Const LocalKey = "cells-numberformat"
    Const LocalProperty = "NumberFormat"
    Const EmptyValue = "General"
    
    Dim AllFormats As Variant
    
    AllFormats = Target.NumberFormat
    ' we get a format string when all ranges are filled by a same format, otherwise get a Null
    If Not IsNull(AllFormats) Then
        ' avoid this block when everything is "General"
        If AllFormats = EmptyValue Then Exit Sub
    End If
    
    CellsMakeSsfBlocks Target, Stream, Env, LocalKey, LocalProperty, EmptyValue
End Sub

Private Sub CellsParseSsfBlocks(Block As Variant, Env As GlobalResources, _
        LocalKey As String, LocalProperty As String)
    ' parse cells-* block using ReadSsfCells
    Dim CrLf As String
    Dim Ws As Worksheet
    
    CrLf = Env.GetEnv("ssf", "line-end", vbCrLf)
    Set Ws = Env.Current("worksheet")
    
    Env.LogWrite LocalKey
    
    With Env.CellStream
        .PropertyName = LocalProperty
        .SetWorksheet Ws
        .ReadSsfCells Block, CrLf
    End With
End Sub

Private Sub CellsMakeSsfBlocks(Target As Range, Stream As Object, Env As GlobalResources, _
        LocalKey As String, LocalProperty As String, EmptyValue As Variant)
    ' generate cells-* block using WriteSsfBlocks
    Env.LogWrite LocalKey
    Stream.WriteLine SsfWriter.SsfBlockBegin(LocalKey)
    
    With Env.CellStream
        .PropertyName = LocalProperty
        .SetRange Target
        .ReadTargetCell EmptyValue
        .WriteSsfBlocks Stream
    End With
    
    Stream.WriteLine SsfWriter.SsfBlockEnd
End Sub

'}}}

'ssf-end

